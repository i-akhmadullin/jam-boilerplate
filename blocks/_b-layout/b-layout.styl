@import '../config';

containerWidth = gridColumns * gridColumnWidth + (gridColumns - 1) * gridGutterWidth;

.b-layout {
    width: containerWidth;
    margin-left: auto;
    margin-right: auto;
    *zoom: 1;
}

.b-layout_type_fluid {
    width: 100%;
    min-width: fluidGridMimWidth;
    max-width: fluidGridMaxWidth;
}

.b-layout:before, .b-layout:after {
    display: table;
    content: "";
}

.b-layout:after {
    clear: both;
}

.b-layout__row {
    margin-left: -(gridGutterWidth);
    *zoom: 1;
}
.b-layout__row:before, .b-layout__row:after {
    display: table;
    content: "";
}

.b-layout__row:after {
    clear: both;
}

.b-layout__column {
    float: left;
    margin-left: gridGutterWidth;
}

spanGenerator(columns)

    for N in 1..(columns)

        columnName = '.b-layout__column_size_' + N;
        {columnName} {
            width: gridColumnWidth * N + gridGutterWidth * ( N - 1 );
        }

    for N in 1..(columns - 1)

        offsetName = '.b-layout__offset_size_' + N;
        {offsetName} {
            margin-left: gridColumnWidth * N + gridGutterWidth * ( N + 1 );
        }

    for N in 1..(columns)

        fluidColumnName = '.b-layout_type_fluid .b-layout__column_size_' + N;
        {fluidColumnName} {
            width: fluidGridColumnWidth * N + fluidGridGutterWidth * ( N - 1 );
        }

    for N in 1..(columns - 1)

        fluidOffsetName = '.b-layout_type_fluid .b-layout__offset_size_' + N;
        {fluidOffsetName} {
            margin-left: fluidGridColumnWidth * N + fluidGridGutterWidth * ( N + 1 );
        }

spanGenerator(gridColumns)